//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 02.2.2017 23:21:55
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace Db201617zVaProektRnabContext
{

    /// <summary>
    /// There are no comments for Db201617zVaProektRnabContext.Aerodromi in the schema.
    /// </summary>
    [Table(Name = @"public.aerodromi")]
    public partial class Aerodromi : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _AerodromId;

        private string _ImeNaAerodrom;

        private int _AdresaId;

        private float _GeografskaSirina;

        private float _GeografskaDolzina;
        #pragma warning restore 0649

        private EntitySet<Megjuletovi> _Megjuletovis_AerodromOdId;

        private EntitySet<Megjuletovi> _Megjuletovis_AerodromDoId;

        private EntityRef<Adresi> _Adresi_AdresaId;
    
        #region Extensibility Method Definitions

        /// <summary>
        /// There are no comments for OnLoaded method in the schema.
        /// </summary>
        partial void OnLoaded();

        /// <summary>
        /// There are no comments for OnValidate method in the schema.
        /// </summary>
        partial void OnValidate(ChangeAction action);

        /// <summary>
        /// There are no comments for OnCreated method in the schema.
        /// </summary>
        partial void OnCreated();

        /// <summary>
        /// There are no comments for OnAerodromIdChanging method in the schema.
        /// </summary>
        partial void OnAerodromIdChanging(int value);

        /// <summary>
        /// There are no comments for OnAerodromIdChanged method in the schema.
        /// </summary>
        partial void OnAerodromIdChanged();

        /// <summary>
        /// There are no comments for OnImeNaAerodromChanging method in the schema.
        /// </summary>
        partial void OnImeNaAerodromChanging(string value);

        /// <summary>
        /// There are no comments for OnImeNaAerodromChanged method in the schema.
        /// </summary>
        partial void OnImeNaAerodromChanged();

        /// <summary>
        /// There are no comments for OnAdresaIdChanging method in the schema.
        /// </summary>
        partial void OnAdresaIdChanging(int value);

        /// <summary>
        /// There are no comments for OnAdresaIdChanged method in the schema.
        /// </summary>
        partial void OnAdresaIdChanged();

        /// <summary>
        /// There are no comments for OnGeografskaSirinaChanging method in the schema.
        /// </summary>
        partial void OnGeografskaSirinaChanging(float value);

        /// <summary>
        /// There are no comments for OnGeografskaSirinaChanged method in the schema.
        /// </summary>
        partial void OnGeografskaSirinaChanged();

        /// <summary>
        /// There are no comments for OnGeografskaDolzinaChanging method in the schema.
        /// </summary>
        partial void OnGeografskaDolzinaChanging(float value);

        /// <summary>
        /// There are no comments for OnGeografskaDolzinaChanged method in the schema.
        /// </summary>
        partial void OnGeografskaDolzinaChanged();
        #endregion

        /// <summary>
        /// There are no comments for Aerodromi constructor in the schema.
        /// </summary>
        public Aerodromi()
        {
            this._Megjuletovis_AerodromOdId = new EntitySet<Megjuletovi>(new Action<Megjuletovi>(this.attach_Megjuletovis_AerodromOdId), new Action<Megjuletovi>(this.detach_Megjuletovis_AerodromOdId));
            this._Megjuletovis_AerodromDoId = new EntitySet<Megjuletovi>(new Action<Megjuletovi>(this.attach_Megjuletovis_AerodromDoId), new Action<Megjuletovi>(this.detach_Megjuletovis_AerodromDoId));
            this._Adresi_AdresaId  = default(EntityRef<Adresi>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for AerodromId in the schema.
        /// </summary>
        [Column(Name = @"aerodrom_id", Storage = "_AerodromId", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int AerodromId
        {
            get
            {
                return this._AerodromId;
            }
            set
            {
                if (this._AerodromId != value)
                {
                    this.OnAerodromIdChanging(value);
                    this.SendPropertyChanging();
                    this._AerodromId = value;
                    this.SendPropertyChanged("AerodromId");
                    this.OnAerodromIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ImeNaAerodrom in the schema.
        /// </summary>
        [Column(Name = @"ime_na_aerodrom", Storage = "_ImeNaAerodrom", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string ImeNaAerodrom
        {
            get
            {
                return this._ImeNaAerodrom;
            }
            set
            {
                if (this._ImeNaAerodrom != value)
                {
                    this.OnImeNaAerodromChanging(value);
                    this.SendPropertyChanging();
                    this._ImeNaAerodrom = value;
                    this.SendPropertyChanged("ImeNaAerodrom");
                    this.OnImeNaAerodromChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AdresaId in the schema.
        /// </summary>
        [Column(Name = @"adresa_id", Storage = "_AdresaId", CanBeNull = false, DbType = "INT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public int AdresaId
        {
            get
            {
                return this._AdresaId;
            }
            set
            {
                if (this._AdresaId != value)
                {
                    if (this._Adresi_AdresaId.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnAdresaIdChanging(value);
                    this.SendPropertyChanging();
                    this._AdresaId = value;
                    this.SendPropertyChanged("AdresaId");
                    this.OnAdresaIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GeografskaSirina in the schema.
        /// </summary>
        [Column(Name = @"geografska_sirina", Storage = "_GeografskaSirina", CanBeNull = false, DbType = "FLOAT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public float GeografskaSirina
        {
            get
            {
                return this._GeografskaSirina;
            }
            set
            {
                if (this._GeografskaSirina != value)
                {
                    this.OnGeografskaSirinaChanging(value);
                    this.SendPropertyChanging();
                    this._GeografskaSirina = value;
                    this.SendPropertyChanged("GeografskaSirina");
                    this.OnGeografskaSirinaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GeografskaDolzina in the schema.
        /// </summary>
        [Column(Name = @"geografska_dolzina", Storage = "_GeografskaDolzina", CanBeNull = false, DbType = "FLOAT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public float GeografskaDolzina
        {
            get
            {
                return this._GeografskaDolzina;
            }
            set
            {
                if (this._GeografskaDolzina != value)
                {
                    this.OnGeografskaDolzinaChanging(value);
                    this.SendPropertyChanging();
                    this._GeografskaDolzina = value;
                    this.SendPropertyChanged("GeografskaDolzina");
                    this.OnGeografskaDolzinaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Megjuletovis_AerodromOdId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Aerodromi_Megjuletovi", Storage="_Megjuletovis_AerodromOdId", ThisKey="AerodromId", OtherKey="AerodromOdId", DeleteRule="NO ACTION")]
        public EntitySet<Megjuletovi> Megjuletovis_AerodromOdId
        {
            get
            {
                return this._Megjuletovis_AerodromOdId;
            }
            set
            {
                this._Megjuletovis_AerodromOdId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Megjuletovis_AerodromDoId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Aerodromi_Megjuletovi1", Storage="_Megjuletovis_AerodromDoId", ThisKey="AerodromId", OtherKey="AerodromDoId", DeleteRule="NO ACTION")]
        public EntitySet<Megjuletovi> Megjuletovis_AerodromDoId
        {
            get
            {
                return this._Megjuletovis_AerodromDoId;
            }
            set
            {
                this._Megjuletovis_AerodromDoId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Adresi_AdresaId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Adresi_Aerodromi", Storage="_Adresi_AdresaId", ThisKey="AdresaId", OtherKey="AdresaId", IsForeignKey=true, DeleteOnNull=true)]
        public Adresi Adresi_AdresaId
        {
            get
            {
                return this._Adresi_AdresaId.Entity;
            }
            set
            {
                Adresi previousValue = this._Adresi_AdresaId.Entity;
                if ((previousValue != value) || (this._Adresi_AdresaId.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._Adresi_AdresaId.Entity = null;
                        previousValue.Aerodromis_AdresaId.Remove(this);
                    }
                    this._Adresi_AdresaId.Entity = value;
                    if (value != null)
                    {
                        this._AdresaId = value.AdresaId;
                        value.Aerodromis_AdresaId.Add(this);
                    }
                    else
                    {
                        this._AdresaId = default(int);
                    }
                    this.SendPropertyChanged("Adresi_AdresaId");
                }
            }
        }
   
        /// <summary>
        /// There are no comments for PropertyChanging event in the schema.
        /// </summary>
        public event PropertyChangingEventHandler PropertyChanging;

        /// <summary>
        /// There are no comments for PropertyChanged event in the schema.
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// There are no comments for SendPropertyChanging method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        /// <summary>
        /// There are no comments for SendPropertyChanging method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        /// <summary>
        /// There are no comments for SendPropertyChanged method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Megjuletovis_AerodromOdId(Megjuletovi entity)
        {
            this.SendPropertyChanging("Megjuletovis_AerodromOdId");
            entity.Aerodromi_AerodromOdId = this;
        }
    
        private void detach_Megjuletovis_AerodromOdId(Megjuletovi entity)
        {
            this.SendPropertyChanging("Megjuletovis_AerodromOdId");
            entity.Aerodromi_AerodromOdId = null;
        }

        private void attach_Megjuletovis_AerodromDoId(Megjuletovi entity)
        {
            this.SendPropertyChanging("Megjuletovis_AerodromDoId");
            entity.Aerodromi_AerodromDoId = this;
        }
    
        private void detach_Megjuletovis_AerodromDoId(Megjuletovi entity)
        {
            this.SendPropertyChanging("Megjuletovis_AerodromDoId");
            entity.Aerodromi_AerodromDoId = null;
        }
    }

}
