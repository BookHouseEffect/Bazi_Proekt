//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 02.2.2017 23:21:55
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace Db201617zVaProektRnabContext
{

    /// <summary>
    /// There are no comments for Db201617zVaProektRnabContext.Rezervacii in the schema.
    /// </summary>
    [Table(Name = @"public.rezervacii")]
    public partial class Rezervacii : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _BiletId;

        private int _PatnikId;

        private int _SedishteId;

        private int _PlanId;

        private bool _TipNaBilet;

        private System.DateTime _DatumNaIzdavanje;

        private float _PlatenaCena;

        private System.Nullable<System.DateTime> _ValidenDo;
        #pragma warning restore 0649

        private EntityRef<Sedishta> _Sedishta_SedishteId;

        private EntityRef<PlanoviNaLetanje> _PlanoviNaLetanje_PlanId;

        private EntityRef<Patnici> _Patnici_PatnikId;
    
        #region Extensibility Method Definitions

        /// <summary>
        /// There are no comments for OnLoaded method in the schema.
        /// </summary>
        partial void OnLoaded();

        /// <summary>
        /// There are no comments for OnValidate method in the schema.
        /// </summary>
        partial void OnValidate(ChangeAction action);

        /// <summary>
        /// There are no comments for OnCreated method in the schema.
        /// </summary>
        partial void OnCreated();

        /// <summary>
        /// There are no comments for OnBiletIdChanging method in the schema.
        /// </summary>
        partial void OnBiletIdChanging(int value);

        /// <summary>
        /// There are no comments for OnBiletIdChanged method in the schema.
        /// </summary>
        partial void OnBiletIdChanged();

        /// <summary>
        /// There are no comments for OnPatnikIdChanging method in the schema.
        /// </summary>
        partial void OnPatnikIdChanging(int value);

        /// <summary>
        /// There are no comments for OnPatnikIdChanged method in the schema.
        /// </summary>
        partial void OnPatnikIdChanged();

        /// <summary>
        /// There are no comments for OnSedishteIdChanging method in the schema.
        /// </summary>
        partial void OnSedishteIdChanging(int value);

        /// <summary>
        /// There are no comments for OnSedishteIdChanged method in the schema.
        /// </summary>
        partial void OnSedishteIdChanged();

        /// <summary>
        /// There are no comments for OnPlanIdChanging method in the schema.
        /// </summary>
        partial void OnPlanIdChanging(int value);

        /// <summary>
        /// There are no comments for OnPlanIdChanged method in the schema.
        /// </summary>
        partial void OnPlanIdChanged();

        /// <summary>
        /// There are no comments for OnTipNaBiletChanging method in the schema.
        /// </summary>
        partial void OnTipNaBiletChanging(bool value);

        /// <summary>
        /// There are no comments for OnTipNaBiletChanged method in the schema.
        /// </summary>
        partial void OnTipNaBiletChanged();

        /// <summary>
        /// There are no comments for OnDatumNaIzdavanjeChanging method in the schema.
        /// </summary>
        partial void OnDatumNaIzdavanjeChanging(System.DateTime value);

        /// <summary>
        /// There are no comments for OnDatumNaIzdavanjeChanged method in the schema.
        /// </summary>
        partial void OnDatumNaIzdavanjeChanged();

        /// <summary>
        /// There are no comments for OnPlatenaCenaChanging method in the schema.
        /// </summary>
        partial void OnPlatenaCenaChanging(float value);

        /// <summary>
        /// There are no comments for OnPlatenaCenaChanged method in the schema.
        /// </summary>
        partial void OnPlatenaCenaChanged();

        /// <summary>
        /// There are no comments for OnValidenDoChanging method in the schema.
        /// </summary>
        partial void OnValidenDoChanging(System.Nullable<System.DateTime> value);

        /// <summary>
        /// There are no comments for OnValidenDoChanged method in the schema.
        /// </summary>
        partial void OnValidenDoChanged();
        #endregion

        /// <summary>
        /// There are no comments for Rezervacii constructor in the schema.
        /// </summary>
        public Rezervacii()
        {
            this._Sedishta_SedishteId  = default(EntityRef<Sedishta>);
            this._PlanoviNaLetanje_PlanId  = default(EntityRef<PlanoviNaLetanje>);
            this._Patnici_PatnikId  = default(EntityRef<Patnici>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for BiletId in the schema.
        /// </summary>
        [Column(Name = @"bilet_id", Storage = "_BiletId", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int BiletId
        {
            get
            {
                return this._BiletId;
            }
            set
            {
                if (this._BiletId != value)
                {
                    this.OnBiletIdChanging(value);
                    this.SendPropertyChanging();
                    this._BiletId = value;
                    this.SendPropertyChanged("BiletId");
                    this.OnBiletIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PatnikId in the schema.
        /// </summary>
        [Column(Name = @"patnik_id", Storage = "_PatnikId", CanBeNull = false, DbType = "INT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public int PatnikId
        {
            get
            {
                return this._PatnikId;
            }
            set
            {
                if (this._PatnikId != value)
                {
                    if (this._Patnici_PatnikId.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPatnikIdChanging(value);
                    this.SendPropertyChanging();
                    this._PatnikId = value;
                    this.SendPropertyChanged("PatnikId");
                    this.OnPatnikIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SedishteId in the schema.
        /// </summary>
        [Column(Name = @"sedishte_id", Storage = "_SedishteId", CanBeNull = false, DbType = "INT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public int SedishteId
        {
            get
            {
                return this._SedishteId;
            }
            set
            {
                if (this._SedishteId != value)
                {
                    if (this._Sedishta_SedishteId.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnSedishteIdChanging(value);
                    this.SendPropertyChanging();
                    this._SedishteId = value;
                    this.SendPropertyChanged("SedishteId");
                    this.OnSedishteIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PlanId in the schema.
        /// </summary>
        [Column(Name = @"plan_id", Storage = "_PlanId", CanBeNull = false, DbType = "INT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public int PlanId
        {
            get
            {
                return this._PlanId;
            }
            set
            {
                if (this._PlanId != value)
                {
                    if (this._PlanoviNaLetanje_PlanId.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPlanIdChanging(value);
                    this.SendPropertyChanging();
                    this._PlanId = value;
                    this.SendPropertyChanged("PlanId");
                    this.OnPlanIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipNaBilet in the schema.
        /// </summary>
        [Column(Name = @"tip_na_bilet", Storage = "_TipNaBilet", CanBeNull = false, DbType = "BOOL NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public bool TipNaBilet
        {
            get
            {
                return this._TipNaBilet;
            }
            set
            {
                if (this._TipNaBilet != value)
                {
                    this.OnTipNaBiletChanging(value);
                    this.SendPropertyChanging();
                    this._TipNaBilet = value;
                    this.SendPropertyChanged("TipNaBilet");
                    this.OnTipNaBiletChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DatumNaIzdavanje in the schema.
        /// </summary>
        [Column(Name = @"datum_na_izdavanje", Storage = "_DatumNaIzdavanje", CanBeNull = false, DbType = "TIMESTAMP NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public System.DateTime DatumNaIzdavanje
        {
            get
            {
                return this._DatumNaIzdavanje;
            }
            set
            {
                if (this._DatumNaIzdavanje != value)
                {
                    this.OnDatumNaIzdavanjeChanging(value);
                    this.SendPropertyChanging();
                    this._DatumNaIzdavanje = value;
                    this.SendPropertyChanged("DatumNaIzdavanje");
                    this.OnDatumNaIzdavanjeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PlatenaCena in the schema.
        /// </summary>
        [Column(Name = @"platena_cena", Storage = "_PlatenaCena", CanBeNull = false, DbType = "FLOAT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public float PlatenaCena
        {
            get
            {
                return this._PlatenaCena;
            }
            set
            {
                if (this._PlatenaCena != value)
                {
                    this.OnPlatenaCenaChanging(value);
                    this.SendPropertyChanging();
                    this._PlatenaCena = value;
                    this.SendPropertyChanged("PlatenaCena");
                    this.OnPlatenaCenaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ValidenDo in the schema.
        /// </summary>
        [Column(Name = @"validen_do", Storage = "_ValidenDo", DbType = "DATE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> ValidenDo
        {
            get
            {
                return this._ValidenDo;
            }
            set
            {
                if (this._ValidenDo != value)
                {
                    this.OnValidenDoChanging(value);
                    this.SendPropertyChanging();
                    this._ValidenDo = value;
                    this.SendPropertyChanged("ValidenDo");
                    this.OnValidenDoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Sedishta_SedishteId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Sedishta_Rezervacii", Storage="_Sedishta_SedishteId", ThisKey="SedishteId", OtherKey="SedishteId", IsForeignKey=true, DeleteOnNull=true)]
        public Sedishta Sedishta_SedishteId
        {
            get
            {
                return this._Sedishta_SedishteId.Entity;
            }
            set
            {
                Sedishta previousValue = this._Sedishta_SedishteId.Entity;
                if ((previousValue != value) || (this._Sedishta_SedishteId.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._Sedishta_SedishteId.Entity = null;
                        previousValue.Rezervaciis_SedishteId.Remove(this);
                    }
                    this._Sedishta_SedishteId.Entity = value;
                    if (value != null)
                    {
                        this._SedishteId = value.SedishteId;
                        value.Rezervaciis_SedishteId.Add(this);
                    }
                    else
                    {
                        this._SedishteId = default(int);
                    }
                    this.SendPropertyChanged("Sedishta_SedishteId");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PlanoviNaLetanje_PlanId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PlanoviNaLetanje_Rezervacii", Storage="_PlanoviNaLetanje_PlanId", ThisKey="PlanId", OtherKey="PlanId", IsForeignKey=true, DeleteOnNull=true)]
        public PlanoviNaLetanje PlanoviNaLetanje_PlanId
        {
            get
            {
                return this._PlanoviNaLetanje_PlanId.Entity;
            }
            set
            {
                PlanoviNaLetanje previousValue = this._PlanoviNaLetanje_PlanId.Entity;
                if ((previousValue != value) || (this._PlanoviNaLetanje_PlanId.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._PlanoviNaLetanje_PlanId.Entity = null;
                        previousValue.Rezervaciis_PlanId.Remove(this);
                    }
                    this._PlanoviNaLetanje_PlanId.Entity = value;
                    if (value != null)
                    {
                        this._PlanId = value.PlanId;
                        value.Rezervaciis_PlanId.Add(this);
                    }
                    else
                    {
                        this._PlanId = default(int);
                    }
                    this.SendPropertyChanged("PlanoviNaLetanje_PlanId");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Patnici_PatnikId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Patnici_Rezervacii", Storage="_Patnici_PatnikId", ThisKey="PatnikId", OtherKey="PatnikId", IsForeignKey=true, DeleteOnNull=true)]
        public Patnici Patnici_PatnikId
        {
            get
            {
                return this._Patnici_PatnikId.Entity;
            }
            set
            {
                Patnici previousValue = this._Patnici_PatnikId.Entity;
                if ((previousValue != value) || (this._Patnici_PatnikId.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._Patnici_PatnikId.Entity = null;
                        previousValue.Rezervaciis_PatnikId.Remove(this);
                    }
                    this._Patnici_PatnikId.Entity = value;
                    if (value != null)
                    {
                        this._PatnikId = value.PatnikId;
                        value.Rezervaciis_PatnikId.Add(this);
                    }
                    else
                    {
                        this._PatnikId = default(int);
                    }
                    this.SendPropertyChanged("Patnici_PatnikId");
                }
            }
        }
   
        /// <summary>
        /// There are no comments for PropertyChanging event in the schema.
        /// </summary>
        public event PropertyChangingEventHandler PropertyChanging;

        /// <summary>
        /// There are no comments for PropertyChanged event in the schema.
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// There are no comments for SendPropertyChanging method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        /// <summary>
        /// There are no comments for SendPropertyChanging method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        /// <summary>
        /// There are no comments for SendPropertyChanged method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
