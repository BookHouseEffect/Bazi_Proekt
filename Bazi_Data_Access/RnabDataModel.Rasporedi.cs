//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 2/5/2017 12:35:36 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace Db201617zVaProektRnabContext
{

    /// <summary>
    /// There are no comments for Db201617zVaProektRnabContext.Rasporedi in the schema.
    /// </summary>
    [Table(Name = @"public.rasporedi")]
    public partial class Rasporedi : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _RasporedId;

        private int _MegjuletoviId;

        private int _DenNaPoletuvanje;

        private System.TimeSpan _VremeNaPoletuvanje;

        private int _DenNaSletuvanje;

        private System.TimeSpan _VremeNaSletuvanje;
        #pragma warning restore 0649

        private EntityRef<Megjuletovi> _Megjuletovi_MegjuletoviId;

        private EntityRef<Denovi> _Denovi_DenNaPoletuvanje;

        private EntityRef<Denovi> _Denovi_DenNaSletuvanje;
    
        #region Extensibility Method Definitions

        /// <summary>
        /// There are no comments for OnLoaded method in the schema.
        /// </summary>
        partial void OnLoaded();

        /// <summary>
        /// There are no comments for OnValidate method in the schema.
        /// </summary>
        partial void OnValidate(ChangeAction action);

        /// <summary>
        /// There are no comments for OnCreated method in the schema.
        /// </summary>
        partial void OnCreated();

        /// <summary>
        /// There are no comments for OnRasporedIdChanging method in the schema.
        /// </summary>
        partial void OnRasporedIdChanging(int value);

        /// <summary>
        /// There are no comments for OnRasporedIdChanged method in the schema.
        /// </summary>
        partial void OnRasporedIdChanged();

        /// <summary>
        /// There are no comments for OnMegjuletoviIdChanging method in the schema.
        /// </summary>
        partial void OnMegjuletoviIdChanging(int value);

        /// <summary>
        /// There are no comments for OnMegjuletoviIdChanged method in the schema.
        /// </summary>
        partial void OnMegjuletoviIdChanged();

        /// <summary>
        /// There are no comments for OnDenNaPoletuvanjeChanging method in the schema.
        /// </summary>
        partial void OnDenNaPoletuvanjeChanging(int value);

        /// <summary>
        /// There are no comments for OnDenNaPoletuvanjeChanged method in the schema.
        /// </summary>
        partial void OnDenNaPoletuvanjeChanged();

        /// <summary>
        /// There are no comments for OnVremeNaPoletuvanjeChanging method in the schema.
        /// </summary>
        partial void OnVremeNaPoletuvanjeChanging(System.TimeSpan value);

        /// <summary>
        /// There are no comments for OnVremeNaPoletuvanjeChanged method in the schema.
        /// </summary>
        partial void OnVremeNaPoletuvanjeChanged();

        /// <summary>
        /// There are no comments for OnDenNaSletuvanjeChanging method in the schema.
        /// </summary>
        partial void OnDenNaSletuvanjeChanging(int value);

        /// <summary>
        /// There are no comments for OnDenNaSletuvanjeChanged method in the schema.
        /// </summary>
        partial void OnDenNaSletuvanjeChanged();

        /// <summary>
        /// There are no comments for OnVremeNaSletuvanjeChanging method in the schema.
        /// </summary>
        partial void OnVremeNaSletuvanjeChanging(System.TimeSpan value);

        /// <summary>
        /// There are no comments for OnVremeNaSletuvanjeChanged method in the schema.
        /// </summary>
        partial void OnVremeNaSletuvanjeChanged();
        #endregion

        /// <summary>
        /// There are no comments for Rasporedi constructor in the schema.
        /// </summary>
        public Rasporedi()
        {
            this._Megjuletovi_MegjuletoviId  = default(EntityRef<Megjuletovi>);
            this._Denovi_DenNaPoletuvanje  = default(EntityRef<Denovi>);
            this._Denovi_DenNaSletuvanje  = default(EntityRef<Denovi>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for RasporedId in the schema.
        /// </summary>
        [Column(Name = @"raspored_id", Storage = "_RasporedId", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int RasporedId
        {
            get
            {
                return this._RasporedId;
            }
            set
            {
                if (this._RasporedId != value)
                {
                    this.OnRasporedIdChanging(value);
                    this.SendPropertyChanging();
                    this._RasporedId = value;
                    this.SendPropertyChanged("RasporedId");
                    this.OnRasporedIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MegjuletoviId in the schema.
        /// </summary>
        [Column(Name = @"megjuletovi_id", Storage = "_MegjuletoviId", CanBeNull = false, DbType = "INT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public int MegjuletoviId
        {
            get
            {
                return this._MegjuletoviId;
            }
            set
            {
                if (this._MegjuletoviId != value)
                {
                    if (this._Megjuletovi_MegjuletoviId.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMegjuletoviIdChanging(value);
                    this.SendPropertyChanging();
                    this._MegjuletoviId = value;
                    this.SendPropertyChanged("MegjuletoviId");
                    this.OnMegjuletoviIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DenNaPoletuvanje in the schema.
        /// </summary>
        [Column(Name = @"den_na_poletuvanje", Storage = "_DenNaPoletuvanje", CanBeNull = false, DbType = "INT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public int DenNaPoletuvanje
        {
            get
            {
                return this._DenNaPoletuvanje;
            }
            set
            {
                if (this._DenNaPoletuvanje != value)
                {
                    if (this._Denovi_DenNaPoletuvanje.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnDenNaPoletuvanjeChanging(value);
                    this.SendPropertyChanging();
                    this._DenNaPoletuvanje = value;
                    this.SendPropertyChanged("DenNaPoletuvanje");
                    this.OnDenNaPoletuvanjeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VremeNaPoletuvanje in the schema.
        /// </summary>
        [Column(Name = @"vreme_na_poletuvanje", Storage = "_VremeNaPoletuvanje", CanBeNull = false, DbType = "TIME NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public System.TimeSpan VremeNaPoletuvanje
        {
            get
            {
                return this._VremeNaPoletuvanje;
            }
            set
            {
                if (this._VremeNaPoletuvanje != value)
                {
                    this.OnVremeNaPoletuvanjeChanging(value);
                    this.SendPropertyChanging();
                    this._VremeNaPoletuvanje = value;
                    this.SendPropertyChanged("VremeNaPoletuvanje");
                    this.OnVremeNaPoletuvanjeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DenNaSletuvanje in the schema.
        /// </summary>
        [Column(Name = @"den_na_sletuvanje", Storage = "_DenNaSletuvanje", CanBeNull = false, DbType = "INT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public int DenNaSletuvanje
        {
            get
            {
                return this._DenNaSletuvanje;
            }
            set
            {
                if (this._DenNaSletuvanje != value)
                {
                    if (this._Denovi_DenNaSletuvanje.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnDenNaSletuvanjeChanging(value);
                    this.SendPropertyChanging();
                    this._DenNaSletuvanje = value;
                    this.SendPropertyChanged("DenNaSletuvanje");
                    this.OnDenNaSletuvanjeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VremeNaSletuvanje in the schema.
        /// </summary>
        [Column(Name = @"vreme_na_sletuvanje", Storage = "_VremeNaSletuvanje", CanBeNull = false, DbType = "TIME NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public System.TimeSpan VremeNaSletuvanje
        {
            get
            {
                return this._VremeNaSletuvanje;
            }
            set
            {
                if (this._VremeNaSletuvanje != value)
                {
                    this.OnVremeNaSletuvanjeChanging(value);
                    this.SendPropertyChanging();
                    this._VremeNaSletuvanje = value;
                    this.SendPropertyChanged("VremeNaSletuvanje");
                    this.OnVremeNaSletuvanjeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Megjuletovi_MegjuletoviId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Megjuletovi_Rasporedi", Storage="_Megjuletovi_MegjuletoviId", ThisKey="MegjuletoviId", OtherKey="MegjuletId", IsForeignKey=true, DeleteOnNull=true)]
        public Megjuletovi Megjuletovi_MegjuletoviId
        {
            get
            {
                return this._Megjuletovi_MegjuletoviId.Entity;
            }
            set
            {
                Megjuletovi previousValue = this._Megjuletovi_MegjuletoviId.Entity;
                if ((previousValue != value) || (this._Megjuletovi_MegjuletoviId.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._Megjuletovi_MegjuletoviId.Entity = null;
                        previousValue.Rasporedis_MegjuletoviId.Remove(this);
                    }
                    this._Megjuletovi_MegjuletoviId.Entity = value;
                    if (value != null)
                    {
                        this._MegjuletoviId = value.MegjuletId;
                        value.Rasporedis_MegjuletoviId.Add(this);
                    }
                    else
                    {
                        this._MegjuletoviId = default(int);
                    }
                    this.SendPropertyChanged("Megjuletovi_MegjuletoviId");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Denovi_DenNaPoletuvanje in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Denovi_Rasporedi", Storage="_Denovi_DenNaPoletuvanje", ThisKey="DenNaPoletuvanje", OtherKey="DenId", IsForeignKey=true, DeleteOnNull=true)]
        public Denovi Denovi_DenNaPoletuvanje
        {
            get
            {
                return this._Denovi_DenNaPoletuvanje.Entity;
            }
            set
            {
                Denovi previousValue = this._Denovi_DenNaPoletuvanje.Entity;
                if ((previousValue != value) || (this._Denovi_DenNaPoletuvanje.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._Denovi_DenNaPoletuvanje.Entity = null;
                        previousValue.Rasporedis_DenNaPoletuvanje.Remove(this);
                    }
                    this._Denovi_DenNaPoletuvanje.Entity = value;
                    if (value != null)
                    {
                        this._DenNaPoletuvanje = value.DenId;
                        value.Rasporedis_DenNaPoletuvanje.Add(this);
                    }
                    else
                    {
                        this._DenNaPoletuvanje = default(int);
                    }
                    this.SendPropertyChanged("Denovi_DenNaPoletuvanje");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Denovi_DenNaSletuvanje in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Denovi_Rasporedi1", Storage="_Denovi_DenNaSletuvanje", ThisKey="DenNaSletuvanje", OtherKey="DenId", IsForeignKey=true, DeleteOnNull=true)]
        public Denovi Denovi_DenNaSletuvanje
        {
            get
            {
                return this._Denovi_DenNaSletuvanje.Entity;
            }
            set
            {
                Denovi previousValue = this._Denovi_DenNaSletuvanje.Entity;
                if ((previousValue != value) || (this._Denovi_DenNaSletuvanje.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._Denovi_DenNaSletuvanje.Entity = null;
                        previousValue.Rasporedis_DenNaSletuvanje.Remove(this);
                    }
                    this._Denovi_DenNaSletuvanje.Entity = value;
                    if (value != null)
                    {
                        this._DenNaSletuvanje = value.DenId;
                        value.Rasporedis_DenNaSletuvanje.Add(this);
                    }
                    else
                    {
                        this._DenNaSletuvanje = default(int);
                    }
                    this.SendPropertyChanged("Denovi_DenNaSletuvanje");
                }
            }
        }
   
        /// <summary>
        /// There are no comments for PropertyChanging event in the schema.
        /// </summary>
        public event PropertyChangingEventHandler PropertyChanging;

        /// <summary>
        /// There are no comments for PropertyChanged event in the schema.
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// There are no comments for SendPropertyChanging method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        /// <summary>
        /// There are no comments for SendPropertyChanging method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        /// <summary>
        /// There are no comments for SendPropertyChanged method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
