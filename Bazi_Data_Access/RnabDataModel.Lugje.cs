//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 2/5/2017 12:35:36 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace Db201617zVaProektRnabContext
{

    /// <summary>
    /// There are no comments for Db201617zVaProektRnabContext.Lugje in the schema.
    /// </summary>
    [Table(Name = @"public.lugje")]
    public partial class Lugje : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _CovekId;

        private string _Ime;

        private string _Prezime;

        private bool _Pol;

        private System.DateTime _DataNaRagjanje;

        private string _BrojNaLicnaKarta;
        #pragma warning restore 0649

        private EntitySet<Patnici> _Patnicis_CovekId;

        private EntitySet<Vraboteni> _Vrabotenis_CovekId;
    
        #region Extensibility Method Definitions

        /// <summary>
        /// There are no comments for OnLoaded method in the schema.
        /// </summary>
        partial void OnLoaded();

        /// <summary>
        /// There are no comments for OnValidate method in the schema.
        /// </summary>
        partial void OnValidate(ChangeAction action);

        /// <summary>
        /// There are no comments for OnCreated method in the schema.
        /// </summary>
        partial void OnCreated();

        /// <summary>
        /// There are no comments for OnCovekIdChanging method in the schema.
        /// </summary>
        partial void OnCovekIdChanging(int value);

        /// <summary>
        /// There are no comments for OnCovekIdChanged method in the schema.
        /// </summary>
        partial void OnCovekIdChanged();

        /// <summary>
        /// There are no comments for OnImeChanging method in the schema.
        /// </summary>
        partial void OnImeChanging(string value);

        /// <summary>
        /// There are no comments for OnImeChanged method in the schema.
        /// </summary>
        partial void OnImeChanged();

        /// <summary>
        /// There are no comments for OnPrezimeChanging method in the schema.
        /// </summary>
        partial void OnPrezimeChanging(string value);

        /// <summary>
        /// There are no comments for OnPrezimeChanged method in the schema.
        /// </summary>
        partial void OnPrezimeChanged();

        /// <summary>
        /// There are no comments for OnPolChanging method in the schema.
        /// </summary>
        partial void OnPolChanging(bool value);

        /// <summary>
        /// There are no comments for OnPolChanged method in the schema.
        /// </summary>
        partial void OnPolChanged();

        /// <summary>
        /// There are no comments for OnDataNaRagjanjeChanging method in the schema.
        /// </summary>
        partial void OnDataNaRagjanjeChanging(System.DateTime value);

        /// <summary>
        /// There are no comments for OnDataNaRagjanjeChanged method in the schema.
        /// </summary>
        partial void OnDataNaRagjanjeChanged();

        /// <summary>
        /// There are no comments for OnBrojNaLicnaKartaChanging method in the schema.
        /// </summary>
        partial void OnBrojNaLicnaKartaChanging(string value);

        /// <summary>
        /// There are no comments for OnBrojNaLicnaKartaChanged method in the schema.
        /// </summary>
        partial void OnBrojNaLicnaKartaChanged();
        #endregion

        /// <summary>
        /// There are no comments for Lugje constructor in the schema.
        /// </summary>
        public Lugje()
        {
            this._Patnicis_CovekId = new EntitySet<Patnici>(new Action<Patnici>(this.attach_Patnicis_CovekId), new Action<Patnici>(this.detach_Patnicis_CovekId));
            this._Vrabotenis_CovekId = new EntitySet<Vraboteni>(new Action<Vraboteni>(this.attach_Vrabotenis_CovekId), new Action<Vraboteni>(this.detach_Vrabotenis_CovekId));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CovekId in the schema.
        /// </summary>
        [Column(Name = @"covek_id", Storage = "_CovekId", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int CovekId
        {
            get
            {
                return this._CovekId;
            }
            set
            {
                if (this._CovekId != value)
                {
                    this.OnCovekIdChanging(value);
                    this.SendPropertyChanging();
                    this._CovekId = value;
                    this.SendPropertyChanged("CovekId");
                    this.OnCovekIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Ime in the schema.
        /// </summary>
        [Column(Name = @"ime", Storage = "_Ime", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string Ime
        {
            get
            {
                return this._Ime;
            }
            set
            {
                if (this._Ime != value)
                {
                    this.OnImeChanging(value);
                    this.SendPropertyChanging();
                    this._Ime = value;
                    this.SendPropertyChanged("Ime");
                    this.OnImeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Prezime in the schema.
        /// </summary>
        [Column(Name = @"prezime", Storage = "_Prezime", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string Prezime
        {
            get
            {
                return this._Prezime;
            }
            set
            {
                if (this._Prezime != value)
                {
                    this.OnPrezimeChanging(value);
                    this.SendPropertyChanging();
                    this._Prezime = value;
                    this.SendPropertyChanged("Prezime");
                    this.OnPrezimeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Pol in the schema.
        /// </summary>
        [Column(Name = @"pol", Storage = "_Pol", CanBeNull = false, DbType = "BOOL NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public bool Pol
        {
            get
            {
                return this._Pol;
            }
            set
            {
                if (this._Pol != value)
                {
                    this.OnPolChanging(value);
                    this.SendPropertyChanging();
                    this._Pol = value;
                    this.SendPropertyChanged("Pol");
                    this.OnPolChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DataNaRagjanje in the schema.
        /// </summary>
        [Column(Name = @"data_na_ragjanje", Storage = "_DataNaRagjanje", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public System.DateTime DataNaRagjanje
        {
            get
            {
                return this._DataNaRagjanje;
            }
            set
            {
                if (this._DataNaRagjanje != value)
                {
                    this.OnDataNaRagjanjeChanging(value);
                    this.SendPropertyChanging();
                    this._DataNaRagjanje = value;
                    this.SendPropertyChanged("DataNaRagjanje");
                    this.OnDataNaRagjanjeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BrojNaLicnaKarta in the schema.
        /// </summary>
        [Column(Name = @"broj_na_licna_karta", Storage = "_BrojNaLicnaKarta", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string BrojNaLicnaKarta
        {
            get
            {
                return this._BrojNaLicnaKarta;
            }
            set
            {
                if (this._BrojNaLicnaKarta != value)
                {
                    this.OnBrojNaLicnaKartaChanging(value);
                    this.SendPropertyChanging();
                    this._BrojNaLicnaKarta = value;
                    this.SendPropertyChanged("BrojNaLicnaKarta");
                    this.OnBrojNaLicnaKartaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Patnicis_CovekId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Lugje_Patnici", Storage="_Patnicis_CovekId", ThisKey="CovekId", OtherKey="CovekId", DeleteRule="NO ACTION")]
        public EntitySet<Patnici> Patnicis_CovekId
        {
            get
            {
                return this._Patnicis_CovekId;
            }
            set
            {
                this._Patnicis_CovekId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Vrabotenis_CovekId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Lugje_Vraboteni", Storage="_Vrabotenis_CovekId", ThisKey="CovekId", OtherKey="CovekId", DeleteRule="NO ACTION")]
        public EntitySet<Vraboteni> Vrabotenis_CovekId
        {
            get
            {
                return this._Vrabotenis_CovekId;
            }
            set
            {
                this._Vrabotenis_CovekId.Assign(value);
            }
        }
   
        /// <summary>
        /// There are no comments for PropertyChanging event in the schema.
        /// </summary>
        public event PropertyChangingEventHandler PropertyChanging;

        /// <summary>
        /// There are no comments for PropertyChanged event in the schema.
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// There are no comments for SendPropertyChanging method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        /// <summary>
        /// There are no comments for SendPropertyChanging method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        /// <summary>
        /// There are no comments for SendPropertyChanged method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Patnicis_CovekId(Patnici entity)
        {
            this.SendPropertyChanging("Patnicis_CovekId");
            entity.Lugje_CovekId = this;
        }
    
        private void detach_Patnicis_CovekId(Patnici entity)
        {
            this.SendPropertyChanging("Patnicis_CovekId");
            entity.Lugje_CovekId = null;
        }

        private void attach_Vrabotenis_CovekId(Vraboteni entity)
        {
            this.SendPropertyChanging("Vrabotenis_CovekId");
            entity.Lugje_CovekId = this;
        }
    
        private void detach_Vrabotenis_CovekId(Vraboteni entity)
        {
            this.SendPropertyChanging("Vrabotenis_CovekId");
            entity.Lugje_CovekId = null;
        }
    }

}
