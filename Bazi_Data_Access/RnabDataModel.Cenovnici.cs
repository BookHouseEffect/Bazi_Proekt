//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 13.1.2017 22:36:43
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace Db201617zVaProektRnabContext
{

    /// <summary>
    /// There are no comments for Db201617zVaProektRnabContext.Cenovnici in the schema.
    /// </summary>
    [Table(Name = @"public.cenovnici")]
    public partial class Cenovnici : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _CenovnikId;

        private int _PlanId;

        private int _KlasaId;

        private float _CenaVoEdenPravec;

        private float _CenaPovraten;
        #pragma warning restore 0649

        private EntityRef<Klasi> _Klasi_KlasaId;

        private EntityRef<PlanoviNaLetanje> _PlanoviNaLetanje_PlanId;
    
        #region Extensibility Method Definitions

        /// <summary>
        /// There are no comments for OnLoaded method in the schema.
        /// </summary>
        partial void OnLoaded();

        /// <summary>
        /// There are no comments for OnValidate method in the schema.
        /// </summary>
        partial void OnValidate(ChangeAction action);

        /// <summary>
        /// There are no comments for OnCreated method in the schema.
        /// </summary>
        partial void OnCreated();

        /// <summary>
        /// There are no comments for OnCenovnikIdChanging method in the schema.
        /// </summary>
        partial void OnCenovnikIdChanging(int value);

        /// <summary>
        /// There are no comments for OnCenovnikIdChanged method in the schema.
        /// </summary>
        partial void OnCenovnikIdChanged();

        /// <summary>
        /// There are no comments for OnPlanIdChanging method in the schema.
        /// </summary>
        partial void OnPlanIdChanging(int value);

        /// <summary>
        /// There are no comments for OnPlanIdChanged method in the schema.
        /// </summary>
        partial void OnPlanIdChanged();

        /// <summary>
        /// There are no comments for OnKlasaIdChanging method in the schema.
        /// </summary>
        partial void OnKlasaIdChanging(int value);

        /// <summary>
        /// There are no comments for OnKlasaIdChanged method in the schema.
        /// </summary>
        partial void OnKlasaIdChanged();

        /// <summary>
        /// There are no comments for OnCenaVoEdenPravecChanging method in the schema.
        /// </summary>
        partial void OnCenaVoEdenPravecChanging(float value);

        /// <summary>
        /// There are no comments for OnCenaVoEdenPravecChanged method in the schema.
        /// </summary>
        partial void OnCenaVoEdenPravecChanged();

        /// <summary>
        /// There are no comments for OnCenaPovratenChanging method in the schema.
        /// </summary>
        partial void OnCenaPovratenChanging(float value);

        /// <summary>
        /// There are no comments for OnCenaPovratenChanged method in the schema.
        /// </summary>
        partial void OnCenaPovratenChanged();
        #endregion

        /// <summary>
        /// There are no comments for Cenovnici constructor in the schema.
        /// </summary>
        public Cenovnici()
        {
            this._Klasi_KlasaId  = default(EntityRef<Klasi>);
            this._PlanoviNaLetanje_PlanId  = default(EntityRef<PlanoviNaLetanje>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CenovnikId in the schema.
        /// </summary>
        [Column(Name = @"cenovnik_id", Storage = "_CenovnikId", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int CenovnikId
        {
            get
            {
                return this._CenovnikId;
            }
            set
            {
                if (this._CenovnikId != value)
                {
                    this.OnCenovnikIdChanging(value);
                    this.SendPropertyChanging();
                    this._CenovnikId = value;
                    this.SendPropertyChanged("CenovnikId");
                    this.OnCenovnikIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PlanId in the schema.
        /// </summary>
        [Column(Name = @"plan_id", Storage = "_PlanId", CanBeNull = false, DbType = "INT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public int PlanId
        {
            get
            {
                return this._PlanId;
            }
            set
            {
                if (this._PlanId != value)
                {
                    if (this._PlanoviNaLetanje_PlanId.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPlanIdChanging(value);
                    this.SendPropertyChanging();
                    this._PlanId = value;
                    this.SendPropertyChanged("PlanId");
                    this.OnPlanIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for KlasaId in the schema.
        /// </summary>
        [Column(Name = @"klasa_id", Storage = "_KlasaId", CanBeNull = false, DbType = "INT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public int KlasaId
        {
            get
            {
                return this._KlasaId;
            }
            set
            {
                if (this._KlasaId != value)
                {
                    if (this._Klasi_KlasaId.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnKlasaIdChanging(value);
                    this.SendPropertyChanging();
                    this._KlasaId = value;
                    this.SendPropertyChanged("KlasaId");
                    this.OnKlasaIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CenaVoEdenPravec in the schema.
        /// </summary>
        [Column(Name = @"cena_vo_eden_pravec", Storage = "_CenaVoEdenPravec", CanBeNull = false, DbType = "FLOAT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public float CenaVoEdenPravec
        {
            get
            {
                return this._CenaVoEdenPravec;
            }
            set
            {
                if (this._CenaVoEdenPravec != value)
                {
                    this.OnCenaVoEdenPravecChanging(value);
                    this.SendPropertyChanging();
                    this._CenaVoEdenPravec = value;
                    this.SendPropertyChanged("CenaVoEdenPravec");
                    this.OnCenaVoEdenPravecChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CenaPovraten in the schema.
        /// </summary>
        [Column(Name = @"cena_povraten", Storage = "_CenaPovraten", CanBeNull = false, DbType = "FLOAT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public float CenaPovraten
        {
            get
            {
                return this._CenaPovraten;
            }
            set
            {
                if (this._CenaPovraten != value)
                {
                    this.OnCenaPovratenChanging(value);
                    this.SendPropertyChanging();
                    this._CenaPovraten = value;
                    this.SendPropertyChanged("CenaPovraten");
                    this.OnCenaPovratenChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Klasi_KlasaId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Klasi_Cenovnici", Storage="_Klasi_KlasaId", ThisKey="KlasaId", OtherKey="KlasaId", IsForeignKey=true)]
        public Klasi Klasi_KlasaId
        {
            get
            {
                return this._Klasi_KlasaId.Entity;
            }
            set
            {
                Klasi previousValue = this._Klasi_KlasaId.Entity;
                if ((previousValue != value) || (this._Klasi_KlasaId.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._Klasi_KlasaId.Entity = null;
                        previousValue.Cenovnicis_KlasaId.Remove(this);
                    }
                    this._Klasi_KlasaId.Entity = value;
                    if (value != null)
                    {
                        this._KlasaId = value.KlasaId;
                        value.Cenovnicis_KlasaId.Add(this);
                    }
                    else
                    {
                        this._KlasaId = default(int);
                    }
                    this.SendPropertyChanged("Klasi_KlasaId");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PlanoviNaLetanje_PlanId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PlanoviNaLetanje_Cenovnici", Storage="_PlanoviNaLetanje_PlanId", ThisKey="PlanId", OtherKey="PlanId", IsForeignKey=true)]
        public PlanoviNaLetanje PlanoviNaLetanje_PlanId
        {
            get
            {
                return this._PlanoviNaLetanje_PlanId.Entity;
            }
            set
            {
                PlanoviNaLetanje previousValue = this._PlanoviNaLetanje_PlanId.Entity;
                if ((previousValue != value) || (this._PlanoviNaLetanje_PlanId.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._PlanoviNaLetanje_PlanId.Entity = null;
                        previousValue.Cenovnicis_PlanId.Remove(this);
                    }
                    this._PlanoviNaLetanje_PlanId.Entity = value;
                    if (value != null)
                    {
                        this._PlanId = value.PlanId;
                        value.Cenovnicis_PlanId.Add(this);
                    }
                    else
                    {
                        this._PlanId = default(int);
                    }
                    this.SendPropertyChanged("PlanoviNaLetanje_PlanId");
                }
            }
        }
   
        /// <summary>
        /// There are no comments for PropertyChanging event in the schema.
        /// </summary>
        public event PropertyChangingEventHandler PropertyChanging;

        /// <summary>
        /// There are no comments for PropertyChanged event in the schema.
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// There are no comments for SendPropertyChanging method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        /// <summary>
        /// There are no comments for SendPropertyChanging method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        /// <summary>
        /// There are no comments for SendPropertyChanged method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
