//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 2/6/2017 2:43:40 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace Db201617zVaProektRnabContext
{

    /// <summary>
    /// There are no comments for Db201617zVaProektRnabContext.Avioni in the schema.
    /// </summary>
    [Table(Name = @"public.avioni")]
    public partial class Avioni : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _AvionId;

        private int _KompanijaId;

        private int _TipId;

        private string _ImeNaAvion;

        private string _Registracija;
        #pragma warning restore 0649

        private EntityRef<Aviokompanii> _Aviokompanii_KompanijaId;

        private EntityRef<TipNaAvioni> _TipNaAvioni_TipId;

        private EntitySet<PlanoviNaLetanje> _PlanoviNaLetanjes_AvionId;
    
        #region Extensibility Method Definitions

        /// <summary>
        /// There are no comments for OnLoaded method in the schema.
        /// </summary>
        partial void OnLoaded();

        /// <summary>
        /// There are no comments for OnValidate method in the schema.
        /// </summary>
        partial void OnValidate(ChangeAction action);

        /// <summary>
        /// There are no comments for OnCreated method in the schema.
        /// </summary>
        partial void OnCreated();

        /// <summary>
        /// There are no comments for OnAvionIdChanging method in the schema.
        /// </summary>
        partial void OnAvionIdChanging(int value);

        /// <summary>
        /// There are no comments for OnAvionIdChanged method in the schema.
        /// </summary>
        partial void OnAvionIdChanged();

        /// <summary>
        /// There are no comments for OnKompanijaIdChanging method in the schema.
        /// </summary>
        partial void OnKompanijaIdChanging(int value);

        /// <summary>
        /// There are no comments for OnKompanijaIdChanged method in the schema.
        /// </summary>
        partial void OnKompanijaIdChanged();

        /// <summary>
        /// There are no comments for OnTipIdChanging method in the schema.
        /// </summary>
        partial void OnTipIdChanging(int value);

        /// <summary>
        /// There are no comments for OnTipIdChanged method in the schema.
        /// </summary>
        partial void OnTipIdChanged();

        /// <summary>
        /// There are no comments for OnImeNaAvionChanging method in the schema.
        /// </summary>
        partial void OnImeNaAvionChanging(string value);

        /// <summary>
        /// There are no comments for OnImeNaAvionChanged method in the schema.
        /// </summary>
        partial void OnImeNaAvionChanged();

        /// <summary>
        /// There are no comments for OnRegistracijaChanging method in the schema.
        /// </summary>
        partial void OnRegistracijaChanging(string value);

        /// <summary>
        /// There are no comments for OnRegistracijaChanged method in the schema.
        /// </summary>
        partial void OnRegistracijaChanged();
        #endregion

        /// <summary>
        /// There are no comments for Avioni constructor in the schema.
        /// </summary>
        public Avioni()
        {
            this._Aviokompanii_KompanijaId  = default(EntityRef<Aviokompanii>);
            this._TipNaAvioni_TipId  = default(EntityRef<TipNaAvioni>);
            this._PlanoviNaLetanjes_AvionId = new EntitySet<PlanoviNaLetanje>(new Action<PlanoviNaLetanje>(this.attach_PlanoviNaLetanjes_AvionId), new Action<PlanoviNaLetanje>(this.detach_PlanoviNaLetanjes_AvionId));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for AvionId in the schema.
        /// </summary>
        [Column(Name = @"avion_id", Storage = "_AvionId", CanBeNull = false, DbType = "INT4 NOT NULL", IsPrimaryKey = true)]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int AvionId
        {
            get
            {
                return this._AvionId;
            }
            set
            {
                if (this._AvionId != value)
                {
                    this.OnAvionIdChanging(value);
                    this.SendPropertyChanging();
                    this._AvionId = value;
                    this.SendPropertyChanged("AvionId");
                    this.OnAvionIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for KompanijaId in the schema.
        /// </summary>
        [Column(Name = @"kompanija_id", Storage = "_KompanijaId", CanBeNull = false, DbType = "INT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public int KompanijaId
        {
            get
            {
                return this._KompanijaId;
            }
            set
            {
                if (this._KompanijaId != value)
                {
                    if (this._Aviokompanii_KompanijaId.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnKompanijaIdChanging(value);
                    this.SendPropertyChanging();
                    this._KompanijaId = value;
                    this.SendPropertyChanged("KompanijaId");
                    this.OnKompanijaIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipId in the schema.
        /// </summary>
        [Column(Name = @"tip_id", Storage = "_TipId", CanBeNull = false, DbType = "INT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.Required()]
        public int TipId
        {
            get
            {
                return this._TipId;
            }
            set
            {
                if (this._TipId != value)
                {
                    if (this._TipNaAvioni_TipId.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnTipIdChanging(value);
                    this.SendPropertyChanging();
                    this._TipId = value;
                    this.SendPropertyChanged("TipId");
                    this.OnTipIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ImeNaAvion in the schema.
        /// </summary>
        [Column(Name = @"ime_na_avion", Storage = "_ImeNaAvion", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string ImeNaAvion
        {
            get
            {
                return this._ImeNaAvion;
            }
            set
            {
                if (this._ImeNaAvion != value)
                {
                    this.OnImeNaAvionChanging(value);
                    this.SendPropertyChanging();
                    this._ImeNaAvion = value;
                    this.SendPropertyChanged("ImeNaAvion");
                    this.OnImeNaAvionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Registracija in the schema.
        /// </summary>
        [Column(Name = @"registracija", Storage = "_Registracija", CanBeNull = false, DbType = "VARCHAR(10) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string Registracija
        {
            get
            {
                return this._Registracija;
            }
            set
            {
                if (this._Registracija != value)
                {
                    this.OnRegistracijaChanging(value);
                    this.SendPropertyChanging();
                    this._Registracija = value;
                    this.SendPropertyChanged("Registracija");
                    this.OnRegistracijaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Aviokompanii_KompanijaId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Aviokompanii_Avioni", Storage="_Aviokompanii_KompanijaId", ThisKey="KompanijaId", OtherKey="KompanijaId", IsForeignKey=true, DeleteOnNull=true)]
        public Aviokompanii Aviokompanii_KompanijaId
        {
            get
            {
                return this._Aviokompanii_KompanijaId.Entity;
            }
            set
            {
                Aviokompanii previousValue = this._Aviokompanii_KompanijaId.Entity;
                if ((previousValue != value) || (this._Aviokompanii_KompanijaId.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._Aviokompanii_KompanijaId.Entity = null;
                        previousValue.Avionis_KompanijaId.Remove(this);
                    }
                    this._Aviokompanii_KompanijaId.Entity = value;
                    if (value != null)
                    {
                        this._KompanijaId = value.KompanijaId;
                        value.Avionis_KompanijaId.Add(this);
                    }
                    else
                    {
                        this._KompanijaId = default(int);
                    }
                    this.SendPropertyChanged("Aviokompanii_KompanijaId");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipNaAvioni_TipId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="TipNaAvioni_Avioni", Storage="_TipNaAvioni_TipId", ThisKey="TipId", OtherKey="TipId", IsForeignKey=true, DeleteOnNull=true)]
        public TipNaAvioni TipNaAvioni_TipId
        {
            get
            {
                return this._TipNaAvioni_TipId.Entity;
            }
            set
            {
                TipNaAvioni previousValue = this._TipNaAvioni_TipId.Entity;
                if ((previousValue != value) || (this._TipNaAvioni_TipId.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._TipNaAvioni_TipId.Entity = null;
                        previousValue.Avionis_TipId.Remove(this);
                    }
                    this._TipNaAvioni_TipId.Entity = value;
                    if (value != null)
                    {
                        this._TipId = value.TipId;
                        value.Avionis_TipId.Add(this);
                    }
                    else
                    {
                        this._TipId = default(int);
                    }
                    this.SendPropertyChanged("TipNaAvioni_TipId");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PlanoviNaLetanjes_AvionId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Avioni_PlanoviNaLetanje", Storage="_PlanoviNaLetanjes_AvionId", ThisKey="AvionId", OtherKey="AvionId", DeleteRule="NO ACTION")]
        public EntitySet<PlanoviNaLetanje> PlanoviNaLetanjes_AvionId
        {
            get
            {
                return this._PlanoviNaLetanjes_AvionId;
            }
            set
            {
                this._PlanoviNaLetanjes_AvionId.Assign(value);
            }
        }
   
        /// <summary>
        /// There are no comments for PropertyChanging event in the schema.
        /// </summary>
        public event PropertyChangingEventHandler PropertyChanging;

        /// <summary>
        /// There are no comments for PropertyChanged event in the schema.
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// There are no comments for SendPropertyChanging method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        /// <summary>
        /// There are no comments for SendPropertyChanging method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        /// <summary>
        /// There are no comments for SendPropertyChanged method in the schema.
        /// </summary>
        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_PlanoviNaLetanjes_AvionId(PlanoviNaLetanje entity)
        {
            this.SendPropertyChanging("PlanoviNaLetanjes_AvionId");
            entity.Avioni_AvionId = this;
        }
    
        private void detach_PlanoviNaLetanjes_AvionId(PlanoviNaLetanje entity)
        {
            this.SendPropertyChanging("PlanoviNaLetanjes_AvionId");
            entity.Avioni_AvionId = null;
        }
    }

}
